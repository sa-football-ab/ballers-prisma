// prisma/schema.prisma

generator client {
    provider = "prisma-client-js"
    output   = "./generated/client"
    binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

// ---------------------------- Auth Service ------------------------------------- //

//TODO: We should add date created and date updated in these tables too

// Club Table defination
model User {
    id     String  @id
    clubId String
    teamId String?
}

// Install Table defination
model Install {
    id           String  @id
    userId       String
    deviceId     String
    deviceName   String?
    latestUserId String
}

// LinkedUserId Table defination
model LinkedUserId {
    id           String @id
    userId       String
    linkedUserId String
}

// LinkedAccounts Table defination
model LinkedAccounts {
    id                  String @id
    userId              String
    externalAccountType String
    externalAccountId   String
}

// Club Table defination
model Club {
    id          String    @id
    display     String
    dateCreated DateTime  @default(now())
    dateUpdated DateTime?
    teams       Team[]
}

// Team Table defination
model Team {
    id          String    @id
    display     String
    club        Club      @relation(fields: [clubId], references: [id])
    clubId      String
    voided      Boolean   @default(false) //  default value false
    dateCreated DateTime  @default(now())
    dateUpdated DateTime?
}

// ---------------------------- Training Program Service ------------------------------------- //
// PlayerTraining Table defination
model PlayerTraining {
    id                           String    @id
    userId                       String
    //Keys of the player training program
    playerTrainingProgramId      String
    playerTrainingProgramLevelId String
    playerTrainingProgramWeekId  String
    //Actual keys of the training program
    trainingId                   String
    points                       Int
    isCompleted                  Boolean
    dateCompleted                DateTime?
    dateCreated                  DateTime  @default(now())
    trainingStartTime            DateTime?
    trainingEndTime              DateTime?
    address                      String?
}

// PlayerTrainingWeek Table defination
model PlayerTrainingWeek {
    id                           String    @id
    userId                       String
    //Keys of the player training program
    playerTrainingProgramId      String
    playerTrainingProgramLevelId String
    //Actual keys of the training program
    trainingProgramWeekId        String
    isCompleted                  Boolean
    dateCompleted                DateTime?
    dateCreated                  DateTime  @default(now())
}

// PlayerTrainingLevel Table defination
model PlayerTrainingLevel {
    id                      String    @id
    userId                  String
    //Keys of the player training program
    playerTrainingProgramId String
    //Actual keys of the training program
    trainingProgramLevelId  String
    isCompleted             Boolean
    dateCompleted           DateTime?
    dateCreated             DateTime  @default(now())
}

// SubscriptionType Enum defination
enum SubscriptionType {
    RECURRING
    ONE_OFF
    FREE
    CLUB
}

// PlayerTrainingProgram Table defination
model PlayerTrainingProgram {
    id                String           @id
    userId            String
    trainingProgramId String
    isCompleted       Boolean
    isLocked          Boolean
    isPremium         Boolean
    subscriptionType  SubscriptionType
    subscriptionId    String?
    dateCompleted     DateTime?
    dateCreated       DateTime         @default(now())
}

datasource db {
    provider = "mysql"
    url      = "mysql://admin:test1234@database-1.czwkbo5ujv8s.eu-north-1.rds.amazonaws.com:3306/smaStage"
}
